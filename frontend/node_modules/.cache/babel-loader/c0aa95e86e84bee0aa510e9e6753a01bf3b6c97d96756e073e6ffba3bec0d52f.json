{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.pathname = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials)\n};\nexport const sessionAPI = {\n  getSessions: () => api.get('/sessions'),\n  getSession: sessionId => api.get(`/sessions/${sessionId}`)\n};\nexport const feedbackAPI = {\n  submitFeedback: feedback => api.post('/feedback', feedback),\n  getMyFeedback: () => api.get('/feedback/my-feedback'),\n  getCategories: () => api.get('/feedback/categories')\n};\nexport const jobAPI = {\n  getJobs: () => api.get('/jobs'),\n  createJob: job => api.post('/jobs', job),\n  uploadResume: formData => api.post('/jobs/resumes', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  applyForJob: formData => api.post('/jobs/apply', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  downloadResumeAdmin: filename => api.get(`/jobs/admin/download/${filename}`, {\n    responseType: 'blob'\n  }),\n  getResumes: () => api.get('/jobs/admin/resumes'),\n  getApplications: () => api.get('/jobs/admin/applications'),\n  exportApplications: () => api.get('/jobs/admin/export/applications', {\n    responseType: 'blob'\n  }),\n  exportResumes: () => api.get('/jobs/admin/export/resumes', {\n    responseType: 'blob'\n  }),\n  uploadJobsCSV: formData => api.post('/jobs/upload-csv', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\nexport const adminAPI = {\n  uploadWhitelist: formData => api.post('/admin/uploadWhitelist', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  uploadSessions: formData => api.post('/admin/uploadSessions', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  createSession: session => api.post('/admin/createSession', session),\n  getSessions: () => api.get('/admin/sessions'),\n  getSessionFeedback: sessionId => api.get(`/admin/feedback/${sessionId}`),\n  exportFeedback: () => api.get('/admin/exportFeedback', {\n    responseType: 'blob'\n  }),\n  getStats: () => api.get('/admin/stats'),\n  getAttendees: () => api.get('/admin/attendees'),\n  createAttendee: attendee => api.post('/admin/attendees', attendee),\n  updateAttendee: (id, attendee) => api.put(`/admin/attendees/${id}`, attendee),\n  deleteAttendee: id => api.delete(`/admin/attendees/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","pathname","Promise","reject","authAPI","login","credentials","post","sessionAPI","getSessions","get","getSession","sessionId","feedbackAPI","submitFeedback","feedback","getMyFeedback","getCategories","jobAPI","getJobs","createJob","job","uploadResume","formData","applyForJob","downloadResumeAdmin","filename","responseType","getResumes","getApplications","exportApplications","exportResumes","uploadJobsCSV","adminAPI","uploadWhitelist","uploadSessions","createSession","session","getSessionFeedback","exportFeedback","getStats","getAttendees","createAttendee","attendee","updateAttendee","id","put","deleteAttendee","delete"],"sources":["/Users/rahulpatel/FeedBack copy/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.pathname = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n};\n\nexport const sessionAPI = {\n  getSessions: () => api.get('/sessions'),\n  getSession: (sessionId) => api.get(`/sessions/${sessionId}`),\n};\n\nexport const feedbackAPI = {\n  submitFeedback: (feedback) => api.post('/feedback', feedback),\n  getMyFeedback: () => api.get('/feedback/my-feedback'),\n  getCategories: () => api.get('/feedback/categories'),\n};\n\nexport const jobAPI = {\n  getJobs: () => api.get('/jobs'),\n  createJob: (job) => api.post('/jobs', job),\n  uploadResume: (formData) => api.post('/jobs/resumes', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  applyForJob: (formData) => api.post('/jobs/apply', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  downloadResumeAdmin: (filename) => api.get(`/jobs/admin/download/${filename}`, { responseType: 'blob' }),\n  getResumes: () => api.get('/jobs/admin/resumes'),\n  getApplications: () => api.get('/jobs/admin/applications'),\n  exportApplications: () => api.get('/jobs/admin/export/applications', { responseType: 'blob' }),\n  exportResumes: () => api.get('/jobs/admin/export/resumes', { responseType: 'blob' }),\n  uploadJobsCSV: (formData) => api.post('/jobs/upload-csv', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n};\n\nexport const adminAPI = {\n  uploadWhitelist: (formData) => api.post('/admin/uploadWhitelist', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  uploadSessions: (formData) => api.post('/admin/uploadSessions', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  createSession: (session) => api.post('/admin/createSession', session),\n  getSessions: () => api.get('/admin/sessions'),\n  getSessionFeedback: (sessionId) => api.get(`/admin/feedback/${sessionId}`),\n  exportFeedback: () => api.get('/admin/exportFeedback', { responseType: 'blob' }),\n  getStats: () => api.get('/admin/stats'),\n  getAttendees: () => api.get('/admin/attendees'),\n  createAttendee: (attendee) => api.post('/admin/attendees', attendee),\n  updateAttendee: (id, attendee) => api.put(`/admin/attendees/${id}`, attendee),\n  deleteAttendee: (id) => api.delete(`/admin/attendees/${id}`),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}