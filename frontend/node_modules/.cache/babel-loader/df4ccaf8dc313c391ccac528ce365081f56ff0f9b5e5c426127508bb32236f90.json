{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials)\n};\nexport const sessionAPI = {\n  getSessions: () => api.get('/sessions'),\n  getSession: sessionId => api.get(`/sessions/${sessionId}`)\n};\nexport const feedbackAPI = {\n  submitFeedback: feedback => api.post('/feedback', feedback),\n  getMyFeedback: () => api.get('/feedback/my-feedback')\n};\nexport const adminAPI = {\n  uploadWhitelist: formData => api.post('/admin/uploadWhitelist', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  uploadSessions: formData => api.post('/admin/uploadSessions', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  createSession: session => api.post('/admin/createSession', session),\n  getSessions: () => api.get('/admin/sessions'),\n  getSessionFeedback: sessionId => api.get(`/admin/feedback/${sessionId}`),\n  exportFeedback: () => api.get('/admin/exportFeedback', {\n    responseType: 'blob'\n  }),\n  getStats: () => api.get('/admin/stats')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authAPI","login","credentials","post","sessionAPI","getSessions","get","getSession","sessionId","feedbackAPI","submitFeedback","feedback","getMyFeedback","adminAPI","uploadWhitelist","formData","uploadSessions","createSession","session","getSessionFeedback","exportFeedback","responseType","getStats"],"sources":["/Users/rahulpatel/FeedBack/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n};\n\nexport const sessionAPI = {\n  getSessions: () => api.get('/sessions'),\n  getSession: (sessionId) => api.get(`/sessions/${sessionId}`),\n};\n\nexport const feedbackAPI = {\n  submitFeedback: (feedback) => api.post('/feedback', feedback),\n  getMyFeedback: () => api.get('/feedback/my-feedback'),\n};\n\nexport const adminAPI = {\n  uploadWhitelist: (formData) => api.post('/admin/uploadWhitelist', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  uploadSessions: (formData) => api.post('/admin/uploadSessions', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  createSession: (session) => api.post('/admin/createSession', session),\n  getSessions: () => api.get('/admin/sessions'),\n  getSessionFeedback: (sessionId) => api.get(`/admin/feedback/${sessionId}`),\n  exportFeedback: () => api.get('/admin/exportFeedback', { responseType: 'blob' }),\n  getStats: () => api.get('/admin/stats'),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;AAEFI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAED,WAAW;AAC7D,CAAC;AAED,OAAO,MAAME,UAAU,GAAG;EACxBC,WAAW,EAAEA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;EACvCC,UAAU,EAAGC,SAAS,IAAKpB,GAAG,CAACkB,GAAG,CAAC,aAAaE,SAAS,EAAE;AAC7D,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EACzBC,cAAc,EAAGC,QAAQ,IAAKvB,GAAG,CAACe,IAAI,CAAC,WAAW,EAAEQ,QAAQ,CAAC;EAC7DC,aAAa,EAAEA,CAAA,KAAMxB,GAAG,CAACkB,GAAG,CAAC,uBAAuB;AACtD,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAG;EACtBC,eAAe,EAAGC,QAAQ,IAAK3B,GAAG,CAACe,IAAI,CAAC,wBAAwB,EAAEY,QAAQ,EAAE;IAC1EjB,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;EACFkB,cAAc,EAAGD,QAAQ,IAAK3B,GAAG,CAACe,IAAI,CAAC,uBAAuB,EAAEY,QAAQ,EAAE;IACxEjB,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;EACFmB,aAAa,EAAGC,OAAO,IAAK9B,GAAG,CAACe,IAAI,CAAC,sBAAsB,EAAEe,OAAO,CAAC;EACrEb,WAAW,EAAEA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,iBAAiB,CAAC;EAC7Ca,kBAAkB,EAAGX,SAAS,IAAKpB,GAAG,CAACkB,GAAG,CAAC,mBAAmBE,SAAS,EAAE,CAAC;EAC1EY,cAAc,EAAEA,CAAA,KAAMhC,GAAG,CAACkB,GAAG,CAAC,uBAAuB,EAAE;IAAEe,YAAY,EAAE;EAAO,CAAC,CAAC;EAChFC,QAAQ,EAAEA,CAAA,KAAMlC,GAAG,CAACkB,GAAG,CAAC,cAAc;AACxC,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}